{"name":"Stf-device-db","tagline":"A JSON-based database of smartphones, tablets and wearables.","body":"# stf-device-db\r\n\r\n**stf-device-db** is a JSON-based database of smartphones, tablets and wearables. The database includes thumbnails for each device and some basic information about the default model at the time of release. It is not complete; currently it mainly covers devices sold in the Japanese market. Data is added as required.\r\n\r\nThis database is currently being used in [STF](https://github.com/openstf/stf).\r\n\r\n## Features\r\n\r\nFor each device, the following information is provided:\r\n\r\n* Model code (e.g. \"SCV31\")\r\n* Product name (e.g. \"Galaxy S6 edge\")\r\n* Thumbnail\r\n* Larger image\r\n* Carrier (most devices in the Japanese market are carrier-specific models)\r\n* Manufacturer\r\n* OS\r\n* CPU\r\n* Memory\r\n* Disk space (if multiple sizes, lowest)\r\n* Release date (on the Japanese market)\r\n* Display size\r\n\r\nThe model code can usually be retrieved from a device quite easily, which then allows fairly straightforward mapping to the device data. Note that some carriers may sometimes prefix models numbers with their own code, which you must strip first.\r\n\r\n## Sources\r\n\r\nThe data in this repository is updated regularly from various sources.\r\n\r\n* [ULTRAZONE's Japanese smartphone database](http://smartphone.ultra-zone.net/) is currently our main provider for phone data. While their data is not open source, we have asked and obtained a permission to use it. The database is unfortunately limited to phones and does not currently offer useful data for tablets or other devices.\r\n* Official press releases. We try to keep model-specific sources in [CREDITS.md](CREDITS.md).\r\n* Manual investigation especially for tablets.\r\n\r\n## Requirements\r\n\r\n* [Node.js](https://nodejs.org/) >= 0.10\r\n* [jq](http://stedolan.github.io/jq/)\r\n* [jpegoptim](https://github.com/tjko/jpegoptim)\r\n* [GraphicsMagick](http://www.graphicsmagick.org/)\r\n\r\nOn OS X, you can install the last three with:\r\n\r\n```bash\r\nbrew install jq jpegoptim graphicsmagick\r\n```\r\n\r\n## Building\r\n\r\nSimply run `make` at the top of the repo after making sure you have the requirements installed. You will then have a complete list of resized icons and photos in the `dist` folder.\r\n\r\n## Usage\r\n\r\nInstall via NPM:\r\n\r\n```bash\r\nnpm install --save stf-device-db\r\n```\r\n\r\n_The module is prebuilt before publishing, so you don't need the build requirements if you just want to use the library._\r\n\r\nThen you must find your device's model number and possibly the internal product name. On Android, this can be done with:\r\n\r\n```bash\r\nadb shell getprop ro.product.model\r\nadb shell getprop ro.product.name\r\n```\r\n\r\nThe internal product name is not required, but helps make a more specific match for some devices (mainly Nexus devices which reuse the model code for newer models of the same size).\r\n\r\nFor example, for a Nexus 5 these values would be:\r\n\r\n```json\r\n{\r\n  \"model\": \"Nexus 5\",\r\n  \"name\": \"hammerhead\"\r\n}\r\n```\r\n\r\nYou can then require the database and use it to find matching data based on the above values:\r\n\r\n```javascript\r\nvar db = require('stf-device-db')\r\n\r\nvar data = db.find({\r\n  model: 'Nexus 5',\r\n  name: 'hammerhead'\r\n})\r\n```\r\n\r\n`data` would then be:\r\n\r\n```javascript\r\n{ carrier: { code: 'e', name: 'イー・モバイル' },\r\n  cpu: { cores: 4, freq: 2.26, name: 'Qualcomm Snapdragon 800 MSM8974' },\r\n  date: '2013-11-14T15:00:00.000Z',\r\n  display: { h: 1920, s: 5, w: 1080 },\r\n  maker: { code: 'l', name: 'LG' },\r\n  memory: { ram: 2048, rom: 32768 },\r\n  name: { id: 'Nexus 5', long: 'EM01L' },\r\n  os: { type: 'android', ver: '5.1' },\r\n  image: 'Nexus_5.jpg' }\r\n```\r\n\r\nIf no match is found, `find()` returns `null`.\r\n\r\nDevice thumbnails and photos are provided in the `dist` folder. It can be served as a static folder.\r\n\r\n## Contributing\r\n\r\nSee [CONTRIBUTING.md](CONTRIBUTING.md).\r\n\r\n## License\r\n\r\nSee [LICENSE](LICENSE).\r\n\r\n<a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-sa/4.0/\">Creative Commons Attribution-ShareAlike 4.0 International License</a>.\r\n","google":"UA-64458786-1","note":"Don't delete this file! It's used internally to help with page regeneration."}